using System;

namespace rotativkanew
{
	class MainClass
	{
		public static void Main (string[] args)
		{

//			Ще се върнем обратно на нашата ротативка, за да добавим код за печалба
//			Първо ще проверим дали имаме три еднакви попадения. Добавете новия код най-долу
//			След това ще проверим дали имаме две еднакви
//			Ще дадем 10 точки за три еднакви.
//			Сега ще дадем 5 точки за две еднакви. 
//			Забележете: Ако не използваме 'else if' а само 'if', ще даваме 5 точки и за три еднакви

//			string[] row = {"портокали","банани","лимони"};
//			var r = new Random();
//			int a1 = r.Next(0,3);
//			int a2 = r.Next(0,3);
//			int a3 = r.Next(0,3);
//			Console.WriteLine(row[a1]+" "+row[a2]+" "+row[a3]);
//			bool tri_ednakvi = (a1 == a2) && (a1 == a3);
//			bool dve_ednakvi = (a1 == a2) || (a1 == a3) || (a2 == a3);
//			int pechalba = 0;
//			if (tri_ednakvi) {
//				pechalba = 10;
//			}
//			else if (dve_ednakvi) {
//				pechalba = 5;
//			}
//			Console.WriteLine("Печелите "+pechalba+" точки");

//			Забележете следния код. Това е същата програма и резултата и е абсолютно същия, 
//			но е написана по друг начин.
//			Първо - вместо a1,a2,a3 сме сложили всичко в един масив a
//			int[] a = new int[3] ...
//				Второ - Вместо да дефинираме bool променливи, директно ги проверяваме с 'if' 
//			и слагаме коментари към тях, за да разчитаме кода по-лесно
//			if ( (a[0] == a[1]) && (a[0] == a[2]) )
//				Трето - добавяме по 5 точки при всяка еднаквост. 
//				Така ще получим същия резултат

//			string[] row = {"портокали","банани","лимони"};
//			var r = new Random();
//			int[] a = new int[3] {r.Next(0,3), r.Next(0,3), r.Next(0,3)};
//			Console.WriteLine(row[a[0]]+" "+row[a[1]]+" "+row[a[2]]);
//			int pechalba = 0;
//			// Три еднакви
//			if ( (a[0] == a[1]) && (a[0] == a[2]) ) pechalba += 5;
//			// Две еднакви
//			if ( (a[0] == a[1]) || (a[0] == a[2]) || (a[1] == a[2]) ) pechalba += 5;
//
//			Console.WriteLine("Печелите "+pechalba+" точки");


//			Познайте какво е това?
//			Същата игра, работи точно както другите, но всякаш всичко е компресирано и разместено
//			В програмирането това се нарича 'code obfuscation' или на български 'обфускация' или 'забулване'
//			Един и същ краен резултат може да се постигне по много начини, но най-добре е да пишем кода си, така че:
//			- да е прост. Простите неща са гениалните.
//			- да се чете лесно.
//			- да се пише лесно (Там където имате възможността да кръстите нещо, не го кръщавайте прекалено дълго. 
//				Все пак ще трябва да го въвеждате на много места и възможността за грешка е по-голяма).
//			- да не заблуждава (Гледайте да не използвате имена като l (латинско малко 'л') 
//				и I (латинско 'И') или D и O или w и m, тоест такива които са сходни визуално на други в обсега им на действие).
//			Представете си колко грозна би била програмата, ако бяхме кръстили масива с произволни числа 
//			'masiv_s_proizvolni_chisla' вместо 'a'. Кода би станал 10 пъти по-дълъг и нечетим и ще направим поне няколко грешки в изписването му

//			new Random();
//			int[] l = new int[4] {l.Next(0,3), l.Next(0,3), l.Next(0,3),0};
//			if ( (l[0] == l[1]) && (l[0] == l[2]) ) l[3] = 10;
//			else if ( (l[0] == l[1]) || (l[0] == l[2]) || (l[1] == l[2]) ) l[3] = 5;
//			string[] row = {"портокали","банани","лимони"};
//
//			Console.WriteLine(row[l[0]]+" "+row[l[1]]+" "+row[l[2]]+"\nПечелите "+l[3]+" точки");
//
		}
	}
}
